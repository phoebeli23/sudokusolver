{"version":3,"sources":["component/Square.js","component/Grid.js","component/App.js","serviceWorker.js","index.js"],"names":["Square","props","classes","border","inFocus","sideFocus","inConflict","className","onClick","id","value","Grid","grid","this","focusRow","focusCol","Math","floor","r","c","rows","cols","key","has","push","squares","i","handleClick","React","Component","App","focus","state","setState","handleKeyPress","e","Set","slice","delete","Number","isValid","add","handleRandom","url","random","fetch","then","response","json","Error","Array","fill","forEach","square","x","y","catch","console","log","handleReset","handleSolve","size","alert","sudokuSolve","length","j","input","row","col","sameRow","sameCol","curr","start","k","Fragment","handleKeys","onKeyEvent","handleFocusableElements","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.57ed9603.chunk.js","sourcesContent":["import React from 'react';\nimport './Square.css'\n\nfunction Square(props) {\n    let classes = 'Square ' + props.border + ' ';\n    if (props.inFocus) {\n        classes += 'inFocus ';\n    }\n    if (props.sideFocus) {\n        classes += 'sideFocus ';\n    }\n    if (props.inConflict) {\n        classes += 'inConflict '\n    }\n    return (\n        <button \n            className={classes}\n            onClick={() => props.onClick(props.id)}>\n           {props.value}\n        </button> \n    );\n}\n\nexport default Square;","import React from 'react';\nimport Square from './Square';\nimport './Grid.css';\n\nclass Grid extends React.Component {\n    render() {\n        const grid = [];\n        const inFocus = this.props.inFocus;\n        let focusRow = -1, focusCol = -1;\n        if (inFocus >= 0) {\n            focusRow = Math.floor(inFocus / 9);\n            focusCol = inFocus % 9;\n        }\n\n        for (let r = 0; r < 9; r++) {\n            for (let c = 0; c < 9; c++) {\n                let border = '';\n                if (r === 0) {\n                    border += 'top ';\n                } else if (r === this.rows - 1) {\n                    border += 'bottom ';\n                } else if (r % 3 === 2) {\n                    border += 'bottom-light ';\n                }\n                if (c === 0) {\n                    border += 'left ';\n                } else if (c === this.cols - 1) {\n                    border += 'right ';\n                } else if (c % 3 === 2) {\n                    border += 'right-light ';\n                }\n                let key = r * 9 + c;\n                let inFocus = false;\n                let sideFocus = false;\n                let inConflict = false;\n\n                if (r === focusRow && c === focusCol) {\n                    inFocus = true;\n                } else if (r === focusRow) {\n                    sideFocus = true;\n                } else if (c === focusCol) {\n                    sideFocus = true;\n                }\n                if (this.props.inConflict.has(key)) {\n                    inConflict = true;\n                }\n\n                grid.push(\n                    <Square\n                        key={key}\n                        id={key}\n                        value={this.props.squares[key]}\n                        onClick={(i) => this.props.handleClick(i)}\n                        border={border}\n                        inFocus={inFocus}\n                        inConflict={inConflict}\n                        sideFocus={sideFocus}\n                    />\n                );\n            }\n        }\n        return (\n            <div className='grid'>\n                {grid}\n            </div>\n        );\n    }\n\n}\nexport default Grid;","import React from 'react';\nimport './App.css';\nimport Grid from './Grid';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      inFocus: -1,\n      squares: Array(81).fill(null),\n      inConflict: new Set(),\n    }\n  }\n\n  handleClick = (i) => {\n    let focus = i;\n    if (this.state.inFocus === i) {\n      focus = -1;\n    }\n    this.setState({\n      inFocus: focus,\n    })\n  }\n\n  handleKeyPress = (key, e) => {\n    const inConflict = new Set(this.state.inConflict);\n    const i = this.state.inFocus;\n    const squares = this.state.squares.slice();\n    \n    if (key === 'backspace') {\n      squares[i] = null;\n      inConflict.delete(i);\n    } else {\n      squares[i] = Number(key);\n      if (!this.isValid(squares, i)) {\n        inConflict.add(i);\n      } else {\n        inConflict.delete(i)\n      }\n    }\n    this.setState({\n        squares: squares,\n        inConflict: inConflict,\n    })\n  }\n\n  handleRandom = () => {\n    const difficulty = Math.floor(Math.random() * 3) + 1;\n    const proxyurl = 'https://cors-anywhere.herokuapp.com/';\n    const url = 'http://www.cs.utep.edu/cheon/ws/sudoku/new/?size=9?level=' + difficulty; // site that doesn’t send Access-Control-*\n    fetch(proxyurl + url) // https://cors-anywhere.herokuapp.com/https://example.com\n      .then(response => response.json())\n      .then(json => {\n        if (!json.response) {\n          throw Error();\n        }\n        const squares = Array(81).fill(null);\n        let i;\n        json.squares.forEach(square => {\n          i = square.x * 9 + square.y;\n          squares[i] = square.value;\n        })\n        this.setState({\n          squares: squares,\n      })\n      }).catch(() => console.log(\"Can’t access \" + url + \" response.\"));\n  }\n\n  handleReset = () => {\n    this.setState({\n        squares: Array(81).fill(''),\n        inConflict: new Set(),\n    })\n  }\n\n  handleSolve = () => {\n    if (this.state.inConflict.size > 0) {\n      alert('No solutions found!');\n    } else {\n      const squares = this.state.squares.slice();\n      if (!this.sudokuSolve(squares, 0)) {\n        alert('No solutions found!');\n        return;\n      }\n      this.setState({\n        inFocus: -1,\n        squares: squares,\n      });\n    }    \n  }\n\n  sudokuSolve = (squares, i) => {\n    if (i === squares.length) {\n      return true;\n    }\n    if (typeof(squares[i]) === 'number') {\n      return this.sudokuSolve(squares, i + 1);\n    }\n    for (let j = 1; j <= 9; j++){\n      squares[i] = j;\n      if (this.isValid(squares, i)) {\n        if (this.sudokuSolve(squares, i + 1)) {\n          return true;\n        }\n      } \n    }\n    squares[i] = null;\n    return false;\n  }\n\n  isValid = (squares, i) => {\n    const input = squares[i];\n    const row = Math.floor(i / 9);\n    const col = i % 9;\n\n    //check row and col\n    for (let j = 0; j < 9; j++) {\n      const sameRow = row * 9 + j;\n      const sameCol = j * 9 + col;\n      if ((sameRow !== i && squares[sameRow] === input)\n            || (sameCol !== i && squares[sameCol] === input)){\n        return false;\n      } \n    }\n    //check 3x3 block\n    let start = Math.floor(row / 3) * 27 + Math.floor(col / 3) * 3;\n    let curr;\n    for (let j = 0; j < 3; j++) {\n      for (let k = 0; k < 3; k++) {\n        curr = start + (j * 9 + k);\n        if (curr !== i && squares[curr] === input) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n\n  render() {\n    return (\n      <React.Fragment>\n        <KeyboardEventHandler\n          handleKeys={['1', '2', '3', '4', '5', '6', '7', '8', '9', 'backspace']}\n          onKeyEvent={this.handleKeyPress}\n          handleFocusableElements={true}\n        />\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <h1>Sudoku Solver</h1>\n            <p>Fill in the grid with numbers [1-9] and click 'Solve!'</p>\n          </header>\n          <div className='grid-area'>\n            <Grid\n              squares={this.state.squares}\n              inConflict={this.state.inConflict}\n              inFocus={this.state.inFocus}\n              handleClick={this.handleClick}\n            />\n          </div>\n          <div className='button-bar'>\n            <button id='random-button' onClick={this.handleRandom}>Random</button>\n            <button id='reset-button' onClick={this.handleReset}>Reset</button>\n            <button id='solve-button' onClick={this.handleSolve}>Solve</button>\n          </div>\n          <footer>\n            <p>Made with React by Phoebe Li (2020)</p>\n          </footer>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './component/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}